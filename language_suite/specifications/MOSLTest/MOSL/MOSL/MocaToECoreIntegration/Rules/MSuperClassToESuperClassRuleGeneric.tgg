rule MSuperClassToESuperClassRuleGeneric {
	source {
		classesNode : Node {
			classesNode.name == "classes"
			
			-children-> classNode
			-children-> baseClassNode
		}
		
		baseClassNode : Node {
		} 
				
		classNode : Node {
		}
	
	}
	
	correspondence {
		classNode <- mClassToEClass : MClassToEClass -> eclass
		baseClassNode <- mClassToEClass2 : MClassToEClass -> esuperClass
	}
	
	target {
		epackage : EPackage {
			-eClassifiers-> eclass
			-eClassifiers-> esuperClass
		}
		
		esuperClass : EClass {}
		
		eclass : EClass {
			++ -eGenericSuperTypes-> egType
		}
		
		++ egType : EGenericType {
			++ -eClassifier-> esuperClass
		}
	}
}