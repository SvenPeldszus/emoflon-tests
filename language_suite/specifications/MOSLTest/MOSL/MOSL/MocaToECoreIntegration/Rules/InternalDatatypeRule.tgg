rule InternalDatatypeRule {
	source {
		attributeNode : Node {
			++ -attribute-> typeGuid
			++ -attribute-> typeNode
		}
		
		++ typeGuid : Attribute {
			typeGuid.name := "typeGuid"
			typeGuid.value := ""
		}
		
		++ typeNode : Attribute {
			typeNode.name := "type"
		}
	}
	
	correspondence {
		attributeNode <- m1 : MAttributeToEAttribute -> attribute
	}
	
	target {
		attribute : EAttribute {
		}
	}
	
	operations {
		postProcessFORWARD(typeNode : source/Attribute, attribute : target/EAttribute) : void
	}
}
