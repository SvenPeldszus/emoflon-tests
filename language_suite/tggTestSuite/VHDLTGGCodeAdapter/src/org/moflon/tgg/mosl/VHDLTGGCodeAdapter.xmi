<?xml version="1.0" encoding="ASCII"?>
<tgg:TripleGraphGrammarFile xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tgg="http://www.moflon.org/ide/tgg/mosl/TGG">
  <schema name="VHDLTGGCodeAdapter">
    <imports name="platform:/plugin/MocaTree/model/MocaTree.ecore"/>
    <imports name="platform:/plugin/VHDLModel/model/VHDLModel.ecore"/>
    <sourceTypes href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#/"/>
    <targetTypes href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#/"/>
    <correspondenceTypes name="NodeToInputPort">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToBlock">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToCompositeBlock">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
    </correspondenceTypes>
    <correspondenceTypes name="FileToVHDLSpecification">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//File"/>
      <target href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//VHDLSpecification"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToOutputPort">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
    </correspondenceTypes>
    <attributeCondDefs name="eq">
      <params type=""/>
      <params index="1" type=""/>
      <allowedSyncAdornments value="BB"/>
      <allowedSyncAdornments value="BF"/>
      <allowedSyncAdornments value="FB"/>
      <allowedGenAdornments value="BF"/>
      <allowedGenAdornments value="FF"/>
      <allowedGenAdornments value="BB"/>
      <allowedGenAdornments value="FB"/>
    </attributeCondDefs>
    <attributeCondDefs name="addPrefix">
      <params index="1" type="EString"/>
      <params index="2" type="EString"/>
      <params type="EString"/>
      <allowedSyncAdornments value="BBF"/>
      <allowedSyncAdornments value="BFB"/>
      <allowedSyncAdornments value="FBB"/>
      <allowedSyncAdornments value="BBB"/>
      <allowedGenAdornments value="BFB"/>
      <allowedGenAdornments value="FBB"/>
      <allowedGenAdornments value="BBF"/>
      <allowedGenAdornments value="FBF"/>
      <allowedGenAdornments value="BBB"/>
      <allowedGenAdornments value="BFF"/>
    </attributeCondDefs>
    <attributeCondDefs name="nextIndex" userDefined="true">
      <params type="EInt"/>
      <allowedSyncAdornments value="B"/>
      <allowedSyncAdornments value="F"/>
      <allowedGenAdornments value="F"/>
      <allowedGenAdornments value="B"/>
    </attributeCondDefs>
  </schema>
  <rules name="Mapping2OrGate" supertypes="//@rules.2" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="expressionNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;or&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <targetPatterns name="leftPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;OR.in1&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="rightPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;OR.in2&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="out">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;OR.out&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="expression">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OrGate"/>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/inputport1"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/outputport"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/inputport2"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.0/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="orNode2Gate" type="//@schema/@correspondenceTypes.1" source="//@rules.0/@sourcePatterns.0" target="//@rules.0/@targetPatterns.3">
      <op value="++"/>
    </correspondencePatterns>
  </rules>
  <rules name="HandleInPort" supertypes="//@rules.8" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="typeNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;in&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <sourcePatterns name="portNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <targetPatterns name="port">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </targetPatterns>
    <targetPatterns name="composite">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//ComplexBlock/ports"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="portNodeToPort" type="//@schema/@correspondenceTypes.0" source="//@rules.1/@sourcePatterns.1" target="//@rules.1/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
  </rules>
  <rules name="AbstractBinaryMappingRule" abstractRule="true" supertypes="//@rules.7" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="expressionNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
    </sourcePatterns>
    <sourcePatterns name="left">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/index"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="0"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.2/@sourcePatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="right">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/index"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="1"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.2/@sourcePatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="inNode2">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;in&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.2/@sourcePatterns.4">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="inputPortNode2">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.2/@sourcePatterns.5">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="entityNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;ENTITY&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <targetPatterns name="noInRight">
      <op value="!"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port"/>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.4">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="leftPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.5">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="compositeBlock">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.4">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.5">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="rightPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.4">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="rightExtern">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </targetPatterns>
    <targetPatterns name="leftExtern">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </targetPatterns>
    <correspondencePatterns name="node2composite" type="//@schema/@correspondenceTypes.2" source="//@rules.2/@sourcePatterns.5" target="//@rules.2/@targetPatterns.2"/>
    <correspondencePatterns name="node2inputPort2" type="//@schema/@correspondenceTypes.0" source="//@rules.2/@sourcePatterns.4" target="//@rules.2/@targetPatterns.4"/>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.2/@targetPatterns.5" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.2/@sourcePatterns.1" attribute="name"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.2/@targetPatterns.4" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.2/@sourcePatterns.2" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="HandleOutPort" supertypes="//@rules.8" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="portNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <sourcePatterns name="typeNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;out&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <targetPatterns name="port">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
    </targetPatterns>
    <correspondencePatterns name="node2outport" type="//@schema/@correspondenceTypes.4" source="//@rules.3/@sourcePatterns.0" target="//@rules.3/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
  </rules>
  <rules name="Mapping2NotGate" supertypes="//@rules.7" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="expressionNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;not&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <sourcePatterns name="entityNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;ENTITY&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="port">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.4/@sourcePatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="expression">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//NotGate"/>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//NotGate/inputport"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//NotGate/outputport"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="out">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;NOT.out&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="leftExtern">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </targetPatterns>
    <targetPatterns name="in">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;NOT.in&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.4/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="compositeBlock">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
    </targetPatterns>
    <correspondencePatterns name="compositeBlockToEntityNode" type="//@schema/@correspondenceTypes.2" source="//@rules.4/@sourcePatterns.1" target="//@rules.4/@targetPatterns.4"/>
    <correspondencePatterns name="notNode2Gate" type="//@schema/@correspondenceTypes.1" source="//@rules.4/@sourcePatterns.0" target="//@rules.4/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.4/@targetPatterns.2" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.4/@sourcePatterns.2" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="Entity2CompositeBlock" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="entity">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/index"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="1"/>
      </attributeAssignments>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;ENTITY&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.5/@sourcePatterns.4">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="gateName">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/index"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="0"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.5/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="gate">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/index"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="0"/>
      </attributeAssignments>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;GATE&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.5/@sourcePatterns.4">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="file">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//File"/>
    </sourcePatterns>
    <sourcePatterns name="vhdl">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;VHDL&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.5/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node/file"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="entityName">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.5/@sourcePatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="composite">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
    </targetPatterns>
    <targetPatterns name="spec">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//VHDLSpecification"/>
      <linkVariablePatterns target="//@rules.5/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//VHDLSpecification/blocks"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="gate2composite" type="//@schema/@correspondenceTypes.2" source="//@rules.5/@sourcePatterns.2" target="//@rules.5/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <correspondencePatterns name="file2spec" type="//@schema/@correspondenceTypes.3" source="//@rules.5/@sourcePatterns.3" target="//@rules.5/@targetPatterns.1"/>
    <correspondencePatterns name="entity2composite" type="//@schema/@correspondenceTypes.2" source="//@rules.5/@sourcePatterns.0" target="//@rules.5/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@sourcePatterns.1" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@sourcePatterns.5" attribute="name"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@sourcePatterns.5" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@targetPatterns.0" attribute="name"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@sourcePatterns.1" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.5/@targetPatterns.0" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="File2VHDLSpec" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="file">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//File"/>
    </sourcePatterns>
    <sourcePatterns name="vhdl">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;VHDL&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.6/@sourcePatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node/file"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="spec">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//VHDLSpecification"/>
    </targetPatterns>
    <correspondencePatterns name="file2spec" type="//@schema/@correspondenceTypes.3" source="//@rules.6/@sourcePatterns.0" target="//@rules.6/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.1">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.6/@targetPatterns.0" attribute="name"/>
      <values xsi:type="tgg:LiteralExpression" value="&quot;.vhdl&quot;"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.6/@sourcePatterns.0" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="AbstractMappingRule" abstractRule="true" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="vhdlNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;VHDL&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="outputPortNodeName">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="mapping">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.8">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="outputPortNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.5">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="outNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;out&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="entityNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;ENTITY&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.0">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="inputPortNode1">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.5">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="expressionNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="gateNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;GATE&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.0">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="inNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;in&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.6">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="noOut">
      <op value="!"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port"/>
    </targetPatterns>
    <targetPatterns name="out">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.6">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="outExternal">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.0">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="noIn">
      <op value="!"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port"/>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.4">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/src"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="leftExtern">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
    </targetPatterns>
    <targetPatterns name="compositeBlock">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.4">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.6">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock/blocks"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.2">
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//ComplexBlock/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="expression">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block"/>
    </targetPatterns>
    <correspondencePatterns name="node2OutputPort" type="//@schema/@correspondenceTypes.4" source="//@rules.7/@sourcePatterns.3" target="//@rules.7/@targetPatterns.2"/>
    <correspondencePatterns name="gate2composite" type="//@schema/@correspondenceTypes.2" source="//@rules.7/@sourcePatterns.8" target="//@rules.7/@targetPatterns.5"/>
    <correspondencePatterns name="node2InputPort1" type="//@schema/@correspondenceTypes.0" source="//@rules.7/@sourcePatterns.6" target="//@rules.7/@targetPatterns.4"/>
    <attrConditions name="//@schema/@attributeCondDefs.2">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.7/@sourcePatterns.2" attribute="index"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.7/@sourcePatterns.1" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.7/@sourcePatterns.2" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="Handle" abstractRule="true" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="typeNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.8/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="entity">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;ENTITY&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="portNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;PORT&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.8/@sourcePatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="portName">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.8/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="port">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port"/>
      <linkVariablePatterns target="//@rules.8/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="composite">
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//CompositeBlock"/>
      <linkVariablePatterns target="//@rules.8/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//ComplexBlock/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="entity2composite" type="//@schema/@correspondenceTypes.2" source="//@rules.8/@sourcePatterns.1" target="//@rules.8/@targetPatterns.1"/>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.8/@sourcePatterns.3" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.8/@targetPatterns.0" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="Mapping2AndGate" supertypes="//@rules.2" schema="//@schema">
    <using importedNamespace="VHDLTGGCodeAdapter.*"/>
    <sourcePatterns name="expressionNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;and&quot;"/>
      </attributeAssignments>
    </sourcePatterns>
    <targetPatterns name="rightPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;AND.in2&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="leftPort">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//InputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;AND.in1&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="expression">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//AndGate"/>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/inputport1"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/inputport2"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Block/inputs"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//BinaryGate/outputport"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="out">
      <op value="++"/>
      <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//OutputPort"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;AND.out&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.9/@targetPatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/VHDLModel/model/VHDLModel.ecore#//Port/block"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="andNode2Gate" type="//@schema/@correspondenceTypes.1" source="//@rules.9/@sourcePatterns.0" target="//@rules.9/@targetPatterns.2">
      <op value="++"/>
    </correspondencePatterns>
  </rules>
</tgg:TripleGraphGrammarFile>
