<?xml version="1.0" encoding="ASCII"?>
<tgg:TripleGraphGrammarFile xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tgg="http://www.moflon.org/ide/tgg/mosl/TGG">
  <schema name="BlockCodeAdapter">
    <imports name="platform:/plugin/MocaTree/model/MocaTree.ecore"/>
    <imports name="platform:/plugin/BlockLanguage/model/BlockLanguage.ecore"/>
    <sourceTypes href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#/"/>
    <targetTypes href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#/"/>
    <correspondenceTypes name="NodeToSpecification">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToBlock">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToWire">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Wire"/>
    </correspondenceTypes>
    <correspondenceTypes name="NodeToPort">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <target href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
    </correspondenceTypes>
    <correspondenceTypes name="FileToSpecification">
      <source href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//File"/>
      <target href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
    </correspondenceTypes>
    <attributeCondDefs name="stringToInt">
      <params index="1" type="EInt"/>
      <params type="EString"/>
      <allowedSyncAdornments value="FB"/>
      <allowedSyncAdornments value="BB"/>
      <allowedSyncAdornments value="BF"/>
      <allowedGenAdornments value="FB"/>
      <allowedGenAdornments value="BF"/>
      <allowedGenAdornments value="FF"/>
      <allowedGenAdornments value="BB"/>
    </attributeCondDefs>
    <attributeCondDefs name="eq">
      <params index="1" type=""/>
      <params type=""/>
      <allowedSyncAdornments value="BB"/>
      <allowedSyncAdornments value="BF"/>
      <allowedSyncAdornments value="FB"/>
      <allowedGenAdornments value="FF"/>
      <allowedGenAdornments value="FB"/>
      <allowedGenAdornments value="BF"/>
      <allowedGenAdornments value="BB"/>
    </attributeCondDefs>
    <attributeCondDefs name="addPrefix">
      <params index="1" type="EString"/>
      <params index="2" type="EString"/>
      <params type="EString"/>
      <allowedSyncAdornments value="FBB"/>
      <allowedSyncAdornments value="BBB"/>
      <allowedSyncAdornments value="BBF"/>
      <allowedSyncAdornments value="BFB"/>
      <allowedGenAdornments value="FBB"/>
      <allowedGenAdornments value="BFF"/>
      <allowedGenAdornments value="FBF"/>
      <allowedGenAdornments value="BBB"/>
      <allowedGenAdornments value="BFB"/>
      <allowedGenAdornments value="BBF"/>
    </attributeCondDefs>
  </schema>
  <rules name="File2SpecRule" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="blocks">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;BLOCKS&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="mappingNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;MAPPINGS&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="specNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeAssignments op=" := ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;SPEC&quot;"/>
      </attributeAssignments>
      <linkVariablePatterns target="//@rules.0/@sourcePatterns.3">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node/file"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="file">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//File"/>
    </sourcePatterns>
    <targetPatterns name="spec">
      <op value="++"/>
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
    </targetPatterns>
    <correspondencePatterns name="n2s" type="//@schema/@correspondenceTypes.0" source="//@rules.0/@sourcePatterns.2" target="//@rules.0/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <correspondencePatterns name="f2s" type="//@schema/@correspondenceTypes.4" source="//@rules.0/@sourcePatterns.3" target="//@rules.0/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.2">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.0/@targetPatterns.0" attribute="name"/>
      <values xsi:type="tgg:LiteralExpression" value="&quot;.blocks&quot;"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.0/@sourcePatterns.3" attribute="name"/>
    </attrConditions>
  </rules>
  <rules name="BasicMapping2WireRule" abstractRule="true" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="fromBlockNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.4">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="mappingNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;MAPPINGS&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="toPortNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
    </sourcePatterns>
    <sourcePatterns name="specNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;SPEC&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="blocks">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;BLOCKS&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="fromPortNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.0">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="to">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.7">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="from">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.1/@sourcePatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="wire">
      <op value="++"/>
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Wire"/>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.1">
        <op value="++"/>
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Wire/port"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="toPort">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
    </targetPatterns>
    <targetPatterns name="fromPort">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port/wire"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="toBlock">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.1">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="spec">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
      <linkVariablePatterns target="//@rules.1/@targetPatterns.3">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification/blocks"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="n2p2" type="//@schema/@correspondenceTypes.3" source="//@rules.1/@sourcePatterns.2" target="//@rules.1/@targetPatterns.1"/>
    <correspondencePatterns name="n2s" type="//@schema/@correspondenceTypes.0" source="//@rules.1/@sourcePatterns.3" target="//@rules.1/@targetPatterns.4"/>
    <correspondencePatterns name="n2w2" type="//@schema/@correspondenceTypes.2" source="//@rules.1/@sourcePatterns.6" target="//@rules.1/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <correspondencePatterns name="n2w1" type="//@schema/@correspondenceTypes.2" source="//@rules.1/@sourcePatterns.7" target="//@rules.1/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <correspondencePatterns name="n2p1" type="//@schema/@correspondenceTypes.3" source="//@rules.1/@sourcePatterns.5" target="//@rules.1/@targetPatterns.2"/>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.6" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@targetPatterns.1" attribute="id"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.1">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.5" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.7" attribute="name"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.1">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.2" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.6" attribute="name"/>
    </attrConditions>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@sourcePatterns.7" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.1/@targetPatterns.2" attribute="id"/>
    </attrConditions>
  </rules>
  <rules name="ContextMapping2WireClosedLoopRule" abstractRule="true" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="toPortNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.2/@sourcePatterns.1">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="fromBlockNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
    </sourcePatterns>
    <targetPatterns name="toBlock">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
      <linkVariablePatterns target="//@rules.2/@targetPatterns.1">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="fromPort">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
    </targetPatterns>
  </rules>
  <rules name="Node2PortRule" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="blocksNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;BLOCKS&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="portNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.3/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="blockNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.3/@sourcePatterns.0">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="port">
      <op value="++"/>
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
    </targetPatterns>
    <targetPatterns name="block">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
      <linkVariablePatterns target="//@rules.3/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="n2b" type="//@schema/@correspondenceTypes.1" source="//@rules.3/@sourcePatterns.2" target="//@rules.3/@targetPatterns.1"/>
    <correspondencePatterns name="n2p" type="//@schema/@correspondenceTypes.3" source="//@rules.3/@sourcePatterns.1" target="//@rules.3/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.0">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.3/@sourcePatterns.1" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.3/@targetPatterns.0" attribute="id"/>
    </attrConditions>
  </rules>
  <rules name="Mapping2WireClosedLoopRule" supertypes="//@rules.1 //@rules.2" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
  </rules>
  <rules name="Mapping2WireRule" supertypes="//@rules.1 //@rules.6" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
  </rules>
  <rules name="ContextMapping2WireRule_f" abstractRule="true" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="toPortNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.6/@sourcePatterns.3">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="fromBlockNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.6/@sourcePatterns.2">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="blocks">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;BLOCKS&quot;"/>
      </attributeConstraints>
    </sourcePatterns>
    <sourcePatterns name="toBlockNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.6/@sourcePatterns.2">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="spec">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
      <linkVariablePatterns target="//@rules.6/@targetPatterns.3">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification/blocks"/>
      </linkVariablePatterns>
      <linkVariablePatterns target="//@rules.6/@targetPatterns.2">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification/blocks"/>
      </linkVariablePatterns>
    </targetPatterns>
    <targetPatterns name="fromPort">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Port"/>
    </targetPatterns>
    <targetPatterns name="toBlock">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
    </targetPatterns>
    <targetPatterns name="fromBlock">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
      <linkVariablePatterns target="//@rules.6/@targetPatterns.1">
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block/ports"/>
      </linkVariablePatterns>
    </targetPatterns>
  </rules>
  <rules name="Node2BlockRule" schema="//@schema">
    <using importedNamespace="BlockCodeAdapter.*"/>
    <sourcePatterns name="blockNode">
      <op value="++"/>
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.2">
        <op value="++"/>
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <sourcePatterns name="specNode">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
    </sourcePatterns>
    <sourcePatterns name="blocks">
      <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Node"/>
      <attributeConstraints op=" == ">
        <attribute href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//TreeElement/name"/>
        <valueExp xsi:type="tgg:LiteralExpression" value="&quot;BLOCKS&quot;"/>
      </attributeConstraints>
      <linkVariablePatterns target="//@rules.7/@sourcePatterns.1">
        <type href="../../../../../../../plugin/MocaTree/model/MocaTree.ecore#//Text/parentNode"/>
      </linkVariablePatterns>
    </sourcePatterns>
    <targetPatterns name="block">
      <op value="++"/>
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Block"/>
    </targetPatterns>
    <targetPatterns name="spec">
      <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification"/>
      <linkVariablePatterns target="//@rules.7/@targetPatterns.0">
        <op value="++"/>
        <type href="../../../../../../../plugin/BlockLanguage/model/BlockLanguage.ecore#//Specification/blocks"/>
      </linkVariablePatterns>
    </targetPatterns>
    <correspondencePatterns name="n2s" type="//@schema/@correspondenceTypes.0" source="//@rules.7/@sourcePatterns.1" target="//@rules.7/@targetPatterns.1"/>
    <correspondencePatterns name="n2b" type="//@schema/@correspondenceTypes.1" source="//@rules.7/@sourcePatterns.0" target="//@rules.7/@targetPatterns.0">
      <op value="++"/>
    </correspondencePatterns>
    <attrConditions name="//@schema/@attributeCondDefs.1">
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.7/@targetPatterns.0" attribute="name"/>
      <values xsi:type="tgg:AttributeVariable" objectVar="//@rules.7/@sourcePatterns.0" attribute="name"/>
    </attrConditions>
  </rules>
</tgg:TripleGraphGrammarFile>
