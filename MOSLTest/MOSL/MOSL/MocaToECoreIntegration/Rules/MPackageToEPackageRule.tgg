rule MPackageToEPackageRule {
	source {
		++ packageNode : Node {
			packageNode.name := "EPackage"
			
			++ -attribute-> nsUri
			++ -attribute-> nsPrefix
			++ -attribute -> packageName
			++ -attribute -> packageExport
			++ -attribute -> packageGuid
			++ -children -> classesNode
			++ -children -> packagesNode
		}
		
		++ packagesNode : Node {
			packagesNode.name := "packages"
		}
		
		++ classesNode : Node {
			classesNode.name := "classes"
		}
		
		++ nsUri : Attribute {
			nsUri.name := "nsURI"
		}
		
		++ nsPrefix : Attribute {
			nsPrefix.name := "nsPrefix"
		}
		
		++ packageName : Attribute {
			packageName.name := "name"
		}
		
		++ packageExport : Attribute {
			packageExport.name := "export"
		}
		
		++ packageGuid : Attribute {
			packageGuid.name := "guid"
		}
	}
	 
	correspondence {
		++ packageNode <- mPackageToEPackage : MPackageToEPackage -> epackage
	}
	
	target {
		++ epackage : EPackage {}
	
	}
	
	constraints {[
		eq(packageName.value, epackage.name)
		eq(nsUri.value, epackage.nsURI)
		eq(nsPrefix.value, epackage.nsPrefix)
		generateGuid[B,F](String)
		generateGuid(packageGuid.value)
	]}
}