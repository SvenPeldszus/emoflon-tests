group launch;

launchConfig(projectName, fragments, className, vmarguments, programarguments) ::= <<
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
<listEntry value="/$projectName$/src/$fragments; separator="/"$/$className$.java"/>
</listAttribute>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
<listEntry value="1"/>
</listAttribute>
<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="$fragments; separator="."$.$className$"/>
<stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="$programarguments$"/>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="$projectName$"/>
<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="$vmarguments$"/>
</launchConfiguration>
>>

launchGroupStart() ::= <<
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.eclipse.cdt.launch.launchGroup">
>>

launchGroup(index, config) ::= <<
<stringAttribute key="org.eclipse.cdt.launch.launchGroup.$index$.action" value="WAIT_FOR_TERMINATION"/>
<stringAttribute key="org.eclipse.cdt.launch.launchGroup.$index$.enabled" value="true"/>
<stringAttribute key="org.eclipse.cdt.launch.launchGroup.$index$.mode" value="run"/>
<stringAttribute key="org.eclipse.cdt.launch.launchGroup.$index$.name" value="$config$"/>
>>

launchGroupEnd() ::= <<
</launchConfiguration>
>>