rule CardToEntryRule {
	source {
		box : Box
		
		partition0 : Partition { 
			-box-> box
			++ -card-> card
		}
		
		++ card : Card
	}
	
	correspondence {
		box <- boxToDictionary : BoxToDictionary -> dictionary
	
		++ card <- cardToEntry : CardToEntry -> entry
	}
	
	target {
		dictionary : Dictionary { 
			++ -entry-> entry
		}
		
		++ entry : Entry
	
	}
	
	constraints {[
		addPrefix("Question ", word, card.back)
		addPrefix("Answer", meaning, card.face)
		concat(":", word, meaning, entry.content)
		
		indexToLevel[BB,BF,FB](EInt,EString)
		indexToLevel(partition0.index,entry.level)
	]}
}