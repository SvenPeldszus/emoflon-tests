rule ForAllEntryRule {
	source {
		dictionaryNode : Node { 
			++ -children-> entryNode
		}
		
		++ entryNode : Node { 
			entryNode.name := "ENTRY"
			++ -children-> contentNode
			++ -children-> indexNode
		}
		
		++ contentNode : Node { 
			contentNode.index := 0
		}
		
		++ indexNode : Node { 
			indexNode.index := 1
		}
	}
	
	correspondence {
		dictionaryNode <- nodeToDictionary : NodeToDictionary -> dictionary
		
		++ entryNode <- nodeToEntry : NodeToEntry -> entry
	}
	
	target {
		dictionary : Dictionary { 
			++ -entry-> entry
		}
		
		++ entry : Entry
	
	}
	
	constraints {
		eq(contentNode.name, entry.content)
		eq(indexNode.name, entry.level)
		setDefaultNumber(entryNode.index, 2)
	}
}